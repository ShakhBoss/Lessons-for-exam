generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  name        String    @map("name") @db.VarChar(255)
  phoneNumber Int       @unique @map("phoneNumber")
  password    String    @map("password") @db.VarChar(255)
  isAdmin     Boolean   @default(false) @map("isAdmin")
  createdAt   DateTime  @default(now()) @map("created_At")
  kurslar     Kurslar[]

  @@map("users")
}

model Kurslar {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  title       String    @unique @map("title") @db.VarChar(255)
  userId      String    @map("userId") @db.Uuid
  description String    @map("description")
  photoName   String    @map("photo")
  createdAt   DateTime  @default(now()) @map("created_At")
  user        Users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  darslar     Darslar[]

  @@map("kurslar")
}

model Darslar {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  title     String   @unique @map("title") @db.VarChar(255)
  kursId    String   @map("kursId") @db.Uuid
  videoName String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_At")
  kurs      Kurslar  @relation(fields: [kursId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("darslar")
}
